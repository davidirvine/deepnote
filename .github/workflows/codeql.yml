name: "CodeQL Security Analysis"

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - '.github/workflows/codeql.yml'
      - '.github/codeql/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - '.github/workflows/codeql.yml'
      - '.github/codeql/**'

jobs:
  analyze:
    name: Analyze C++
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    # Initialize CodeQL for C++
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # Override default queries to include security-and-quality
        queries: security-and-quality
        # Use custom configuration to limit analysis to src/ directory
        config-file: ./.github/codeql/codeql-config.yml
        
    # Install dependencies needed for C++ compilation
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    # Build the C++ project for CodeQL analysis (focused on src directory)
    - name: Build project
      run: |
        # Create a minimal build to satisfy CodeQL's compilation requirements
        # We only need to compile the source files, not the full test suite
        cd test
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        # Build only the source files needed for analysis
        make -j2

    # Perform CodeQL analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        
    # Upload SARIF results (optional, for advanced workflows)
    - name: Upload SARIF file
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ../results/cpp.sarif
      continue-on-error: true
